generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

model User {
  id              String           @id @default(uuid())
  email           String           @unique
  password        String
  fullName        String?
  role            Role             @default(USER)

  // Org ownership and membership
  organizationId  String?
  organization    Organization?    @relation(fields: [organizationId], references: [id])

  // Invitation tracking
  invitedById     String?
  invitedBy       User?            @relation("InvitedUsers", fields: [invitedById], references: [id])
  invitedUsers    User[]           @relation("InvitedUsers")

  // Owned organizations
  ownedOrganization Organization?  @relation("OrgOwner")

  entries         Entry[]
  importSessions  ImportSession[]
}

model Organization {
  id         String   @id @default(uuid())
  name       String
  ownerId    String   @unique
  owner      User     @relation("OrgOwner", fields: [ownerId], references: [id])
  users      User[]
  entries    Entry[]
  sessions   ImportSession[]
}

model Entry {
  id               String         @id @default(uuid())
  fullName         String
  email            String?
  platform         String
  externalId       String?
  companyName      String?
  iban             String?
  bankName         String?
  beneficiary      String?

  organizationId   String
  organization     Organization   @relation(fields: [organizationId], references: [id])
  
  createdById      String
  createdBy        User           @relation(fields: [createdById], references: [id])

  salaryHistories  SalaryHistory[]
  importSessionId  String?
  importSession    ImportSession? @relation(fields: [importSessionId], references: [id])
}

model SalaryHistory {
  id        String   @id @default(uuid())
  entryId   String
  entry     Entry    @relation(fields: [entryId], references: [id])
  date      DateTime
  amount    Float
  hours     Int
  net       Float
}

model ImportSession {
  id               String         @id @default(uuid())
  organizationId   String
  organization     Organization   @relation(fields: [organizationId], references: [id])

  createdById      String
  createdBy        User           @relation(fields: [createdById], references: [id])

  platform         String
  fileId           String
  file             UploadedFile   @relation(fields: [fileId], references: [id])
  entries          Entry[]
}

model UploadedFile {
  id    String @id @default(uuid())
  name  String
  url   String
  session ImportSession?
}
