generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String       @id @default(uuid())
  email            String       @unique
  password         String
  role             String
  ownerId          String?      // null for admins; employees point to their adminâ€™s id

  // entries this user created
  entriesAsCreator Entry[]      @relation("creatorEntries")

  // entries this user owns (as admin)
  entriesAsAdmin   Entry[]      @relation("adminEntries")

  // invite links this admin created
  inviteLinks      InviteLink[] @relation("inviteLinks")

  // password reset tokens for this user
  resetTokens      ResetToken[] @relation("UserResetTokens")
}

model Entry {
  id         String   @id @default(uuid())
  fullName   String
  salary     Float
  adminId    String
  createdBy  String
  createdAt  DateTime @default(now())

  admin      User     @relation("adminEntries", fields: [adminId], references: [id])
  creator    User     @relation("creatorEntries", fields: [createdBy], references: [id])
}

model InviteLink {
  id         String   @id @default(uuid())
  token      String   @unique
  adminId    String
  expiresAt  DateTime

  admin      User     @relation("inviteLinks", fields: [adminId], references: [id])
}

model ResetToken {
  id         String   @id @default(uuid())
  token      String   @unique
  userId     String
  expiresAt  DateTime

  user       User     @relation("UserResetTokens", fields: [userId], references: [id])
}
